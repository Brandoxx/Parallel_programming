procedure main:
  shared a1_ready := create_semaphor(0)
  shared b1_ready := create_semaphor(0)
  create_thread(thread_a)
  create_thread(thread_b)
end procedure
// Does the same as the before, but with a different order of the semaphores
// In this case, a1 waits for b1 and then signals, and b1 signals and then waits for a1
procedure thread_a:
  statement a1 
  wait(b1_ready)
  signal(a1_ready)
  statement a2
end procedure

procedure thread_b:
  statement b1
  signal(b1_ready)
  wait(a1_ready)
  statement b2
end procedure
