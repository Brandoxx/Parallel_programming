//  This is a simple rendevous point for the two types of threads
main:
	while true:
        private 
		case read_char() of:
			'M': create_thread(male)
			'W': create_thread(female)
			EOF: return
    private danceTime = random(1000)
    private limit = read_char()
    private timeElapsed = 0
    pairLimit = read_char()
    dancingSemaphore = create_semaphore(0)
    manGroup = create_semaphore(0)
    womanGroup = create_semaphore(0)
    danceLimit = create_semaphore(pairLimit * 4)
    manLimit = create_semaphore(2)
    womanLimit = create_semaphore(2)
    mutex = create_semaphore(1)
    shared manCount = 0
    shared womanCount = 0

male:
    while timeElapsed < danceLimit:
      // This ensures that there's at least one woman waiting
      wait(manLimit)
      wait(mutex)
      manCount++
      if (manCount == 2 && womanCount == 2) {
        signal(manGroup)
        signal(manGroup)
        signal(womanGroup)
        signal(womanGroup)
        manCount = 0
        womanCount = 0
      }
      signal(mutex)
      wait(manGroup)
      signal(manLimit)
      wait(dancingSemaphore)  //  Wait for the dancing semaphore
      wait(danceLimit)  //  Wait for the dance limit semaphore
      danceTime = min(danceTime, woman.danceTime)
      dance(danceTime)
      timeElapsed += danceTime
      signal(danceLimit) //  Signal the dance limit semaphore
    end while


female:
    while timeElapsed < danceLimit:
      wait(womanLimit)
      wait(mutex)
      womanCount++
      if (manCount == 2 && womanCount == 2) {
        signal(manGroup)
        signal(manGroup)
        signal(womanGroup)
        signal(womanGroup)
        manCount = 0
        womanCount = 0
      }
      signal(mutex)
      wait(womanGroup)
      signal(womanLimit)
      // This ensures that there's at least one man waiting
      signal(dancingSemaphore)  //  Signal the semaphore
      signal(dancingSemaphore)  //  Signal the semaphore
      wait(dancingSemaphore)  //  Wait for the semaphore
      wait(danceLimit)  //  Wait for the semaphore
      danceTime = min(danceTime, woman.danceTime, other.danceTime, other.danceTime)
      dance(danceTime)
      timeElapsed += danceTime
      signal(danceLimit) //  Signal the semaphore
    end while